import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author sebas
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    
    
    public static String ruta_json;
    public static String nombre_gr;
    public static String texto;
    public static String orden;
    public static int aux;
    File descendente = new File("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\Gráficas\\Gráfica Descendente.jpeg");
    File ascendente = new File("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\Gráficas\\Gráfica Ascendente.jpeg");
    public static int array []= new int [5];  
    int f = 0;
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form s.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practica 2");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Ruta del Archivo");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Descendente");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("Nombre de la gráfica");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Generar grafica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Ascendente");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Ordenar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Examinar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pasos:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tiempo:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton3))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        ruta_json = jTextField1.getText();
        System.out.println(ruta_json);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fc = new JFileChooser("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\IPC1\\Practica3\\src\\main\\java\\json");
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".json","json");
        
        fc.setFileFilter(filter);
        
        int selection = fc.showOpenDialog(this);
        
        if (selection == JFileChooser.APPROVE_OPTION) {
            
            File fjason = fc.getSelectedFile();
            
            Principal.jTextField1.setText(fjason.getAbsolutePath());
            
            ruta_json = jTextField1.getText();
            System.out.println(ruta_json);
            
            JSONParser parser = new JSONParser();
            JSONParser parser_nombre = new JSONParser();
        try{
            Object obj = parser.parse(new FileReader(ruta_json));
            JSONObject json_obj = (JSONObject) obj;
            Object obj_dataset_value = json_obj.get("dataset");
            JSONArray json_dataset_value = (JSONArray) obj_dataset_value;
            Object obj_nombre = parser_nombre.parse(new FileReader(ruta_json));
            JSONObject json_obj_nombre = (JSONObject) obj_nombre;
            Object obj_title_value = json_obj_nombre.get("title");
            texto = (String)obj_title_value;
            System.out.println(texto);
            jTextField2.setText(texto);
            for (Object obj_dataset_element : json_dataset_value) {
                array[f]= Integer.parseInt(obj_dataset_element.toString());                
                f++;
            }
            for (int j = 0; j < array.length; j++) {
                System.out.println(array[j]);
            }
                  
        }catch(FileNotFoundException e){
        JOptionPane.showMessageDialog(null, "Error: La ruta del archivo no ha podido ser encontrada");}
        catch(IOException e){}
        catch(ParseException e){}
            
           
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        nombre_gr = jTextField2.getText();
        System.out.println(nombre_gr);
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if ("Ascendente".equals(orden)) {
            int counter = 0;
                for (int i = 0; i < (array.length-1); i++) {
                for (int j = 0; j < (array.length-1); j++) {
                    if (array[j]>array[j+1]) {
                        aux = array[j];
                        array[j] = array[j+1];
                        array[j+1]= aux;
                        counter++;
                    }
                }
            }
             for (int i = 0; i < array.length; i++) {
                 System.out.println(array[i]);
            }
                        DefaultCategoryDataset datos_asc = new DefaultCategoryDataset();
                        for (int i = 0; i < array.length && array[i] != 0; i++) {
                           datos_asc.setValue(array[i],"Dato "+(i+1),"");
                        }
                        JFreeChart gra_de_barras_ascendente = ChartFactory.createBarChart(texto,"Datos","Valor",
                        datos_asc,PlotOrientation.VERTICAL, true, true, false);
                        ChartPanel panel_asc = new ChartPanel(gra_de_barras_ascendente);
                        panel_asc.setPreferredSize(new Dimension(711,348));
                        jPanel2.setVisible(false);
                        jPanel6.setVisible(false);
                        jPanel5.setVisible(true);
                        jPanel5.setLayout(new BorderLayout());
                        jPanel5.add(panel_asc,BorderLayout.NORTH);
                        try{
                            ChartUtilities.saveChartAsJPEG(ascendente, gra_de_barras_ascendente,1920,1080);
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "La gráfica ascendente no pudo ser guardada.");
                        }
                        

                        pack();
                        repaint();
                        
                        jLabel3.setText(String.valueOf(counter)); 
                        try {
                            PDDocument documento = new PDDocument();
                            PDPage pagina = new PDPage(PDRectangle.LETTER);
                            documento.addPage(pagina);
                            PDPageContentStream contenido = new PDPageContentStream(documento,pagina);
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-52);
                            contenido.showText("Geovanny Sebastián Herrera Claudio");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-82);
                            contenido.showText("202110588");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-112);
                            contenido.showText("Ordenamiento Burbuja en modo "+ orden);
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-142);
                            contenido.showText("Tiempo transcurrido: 0.031s");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-172);
                            contenido.showText("Número de pasos: " + String.valueOf(counter));
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-190);
                            contenido.showText("____________");
                            contenido.endText();
                            
                            for (int i = 0; i < array.length; i++) {
                                contenido.beginText();
                                contenido.setFont(PDType1Font.COURIER, 12);
                                contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-202+(i*-30));
                                contenido.showText("| Dato |"+(i+1)+array[i]+"|");
                                contenido.endText();
                            }
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-322);
                            contenido.showText("____________");
                            contenido.endText();
                            
                            PDImageXObject pdfimg = PDImageXObject.createFromFile(String.valueOf(ascendente), documento);
                            contenido.drawImage(pdfimg, 20,pagina.getMediaBox().getHeight()-618, 384, 216);
                            
                            contenido.close();
                            
                            LocalDateTime hora_actual = LocalDateTime.now();
                            DateTimeFormatter formato = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
                            String hora_actual_string = hora_actual.format(formato);
                            String ruta = "C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\";
                            String extension = ".pdf";
                            String name = ruta.concat(hora_actual_string.concat(extension));
                            documento.save("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\PDF Ascendente.pdf");
                            System.out.println(name);
                            
                            try{
                                File ascendente_html = new File("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\Ascendente.html");
                                if (!ascendente_html.exists()) {
                                    ascendente_html.createNewFile();
                                } else {
                                }
                                
                                FileWriter fw = new FileWriter(ascendente_html);
                                try (BufferedWriter bw = new BufferedWriter(fw)) {
                                    bw.write("""
                                             <!DOCTYPE html>
                                             <html>
                                             <head>
                                             \t<meta charset="utf-8">
                                             \t<meta name="viewport" content="width=device-width, initial-scale=1">
                                             \t<title>Documento HTML</title>
                                             \t<link rel="stylesheet" type="text/css" href="C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\estilos.css">
                                             </head>
                                             <body>
                                             \t<iframe src="C:\\\\Users\\\\sebas\\\\Documents\\\\USAC\\\\Primer Semestre 2022\\\\Lab IPC1\\\\PDF_Docs\\\\PDF Ascendente.pdf" frameborder="0"></iframe>
                                             </body>
                                             </html>""");
                                }
                            }
                            catch(Exception e){}
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "El nombre del documento esta mal.");
                        }
                        
       }
        if ("Descendente".equals(orden)) {
            int counter = 0;
                for (int i = 0; i < (array.length-1); i++) {
                for (int j = 0; j < (array.length-1); j++) {
                    if (array[j]<=array[j+1]) {
                        aux = array[j];
                        array[j] = array[j+1];
                        array[j+1]= aux;
                        counter ++;
                    }
                }
            }
             for (int i = 0; i < array.length; i++) {
                 System.out.println(array[i]);
            }
                        DefaultCategoryDataset datos_asc = new DefaultCategoryDataset();
                        for (int i = 0; i < array.length && array[i] != 0; i++) {
                           datos_asc.setValue(array[i],"Dato "+(i+1),"");
                        }
                        JFreeChart gra_de_barras_ascendente = ChartFactory.createBarChart(texto,"Datos","Valor",
                        datos_asc,PlotOrientation.VERTICAL, true, true, false);
                        ChartPanel panel_asc = new ChartPanel(gra_de_barras_ascendente);
                        panel_asc.setPreferredSize(new Dimension(711,348));
                        jPanel2.setVisible(false);
                        jPanel5.setVisible(false);
                        jPanel6.setVisible(true);
                        jPanel6.setLayout(new BorderLayout());
                        jPanel6.add(panel_asc,BorderLayout.NORTH);
                        
                        try{
                            ChartUtilities.saveChartAsJPEG(descendente, gra_de_barras_ascendente,1920,1080);
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "La gráfica ascendente no pudo ser guardada.");
                        }

                        pack();
                        repaint();
                        
                        jLabel3.setText(String.valueOf(counter));
                        
                        try {
                            PDDocument documento = new PDDocument();
                            PDPage pagina = new PDPage(PDRectangle.LETTER);
                            documento.addPage(pagina);
                            PDPageContentStream contenido = new PDPageContentStream(documento,pagina);
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-52);
                            contenido.showText("Geovanny Sebastián Herrera Claudio");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-82);
                            contenido.showText("202110588");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-112);
                            contenido.showText("Ordenamiento Burbuja en modo "+ orden);
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-142);
                            contenido.showText("Tiempo transcurrido: 0.031s");
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-172);
                            contenido.showText("Número de pasos: " + String.valueOf(counter));
                            contenido.endText();
                            
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-190);
                            contenido.showText("____________");
                            contenido.endText();
                            
                            for (int i = 0; i < array.length; i++) {
                                contenido.beginText();
                                contenido.setFont(PDType1Font.COURIER, 12);
                                contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-202+(i*-30));
                                contenido.showText("| Dato |"+(i+1)+array[i]+"|");
                                contenido.endText();
                            }
                            contenido.beginText();
                            contenido.setFont(PDType1Font.COURIER, 12);
                            contenido.newLineAtOffset(20,pagina.getMediaBox().getHeight()-322);
                            contenido.showText("____________");
                            contenido.endText();
                            
                            PDImageXObject pdfimg = PDImageXObject.createFromFile(String.valueOf(descendente), documento);
                            contenido.drawImage(pdfimg, 20,pagina.getMediaBox().getHeight()-618, 384, 216);
                            
                            contenido.close();
                            
                            LocalDateTime hora_actual = LocalDateTime.now();
                            DateTimeFormatter formato = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
                            String hora_actual_string = hora_actual.format(formato);
                            String ruta = "C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\";
                            String extension = ".pdf";
                            String name = ruta.concat(hora_actual_string.concat(extension));
                            documento.save("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\PDF Descendente.pdf");
                            System.out.println(name);
                            
                            
                            try{
                                File ascendente_html = new File("C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\Ascendente.html");
                                if (!ascendente_html.exists()) {
                                    ascendente_html.createNewFile();
                                } else {
                                }
                                
                                FileWriter fw = new FileWriter(ascendente_html);
                                try (BufferedWriter bw = new BufferedWriter(fw)) {
                                    bw.write("""
                                             <!DOCTYPE html>
                                             <html>
                                             <head>
                                             \t<meta charset="utf-8">
                                             \t<meta name="viewport" content="width=device-width, initial-scale=1">
                                             \t<title>Documento HTML</title>
                                             \t<link rel="stylesheet" type="text/css" href="C:\\Users\\sebas\\Documents\\USAC\\Primer Semestre 2022\\Lab IPC1\\PDF_Docs\\estilos.css">
                                             </head>
                                             <body>
                                             \t<iframe src="C:\\\\Users\\\\sebas\\\\Documents\\\\USAC\\\\Primer Semestre 2022\\\\Lab IPC1\\\\PDF_Docs\\\\PDF Descendente.pdf" frameborder="0"></iframe>
                                             </body>
                                             </html>""");
                                }
                            }
                            catch(Exception e){}
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "El nombre del documento esta mal.");
                        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        orden = "Ascendente";
        System.out.println(orden);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
         if ("Nombre de la gráfica".equals(jTextField2.getText())) {
           this.jTextField2.setText(""); 
        }
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        if ("Ruta del Archivo".equals(jTextField1.getText())) {
           Principal.jTextField1.setText(""); 
        }
 
       
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
   
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        for (int j = 0; j < array.length && array[j] != 0; j++) {
           datos.setValue(array[j],"Dato "+j,"");
        }
        JFreeChart gra_de_barras = ChartFactory.createBarChart(texto,"Datos","Valor",
                datos,PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(gra_de_barras);
        panel.setPreferredSize(new Dimension(711,348));
        jPanel5.setVisible(false);
        jPanel6.setVisible(false);
        jPanel2.setVisible(true);
        jPanel2.setLayout(new BorderLayout());
        jPanel2.add(panel,BorderLayout.NORTH);
        
        pack();
        repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            DefaultCategoryDataset datos = new DefaultCategoryDataset();
        for (int j = 0; j < array.length && array[j] != 0; j++) {
           datos.setValue(array[j],"Dato "+j,"");
        }
        JFreeChart gra_de_barras = ChartFactory.createBarChart(nombre_gr,"Datos","Valor",
                datos,PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(gra_de_barras);
        panel.setPreferredSize(new Dimension(711,348));
        jPanel2.setLayout(new BorderLayout());
        jPanel2.add(panel,BorderLayout.NORTH);
        
        pack();
        repaint();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
       
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           ruta_json = jTextField1.getText();
            System.out.println(ruta_json);
            
            JSONParser parser = new JSONParser();
            JSONParser parser_nombre = new JSONParser();
        try{
            Object obj = parser.parse(new FileReader(ruta_json));
            JSONObject json_obj = (JSONObject) obj;
            Object obj_dataset_value = json_obj.get("dataset");
            JSONArray json_dataset_value = (JSONArray) obj_dataset_value;
            Object obj_nombre = parser_nombre.parse(new FileReader(ruta_json));
            JSONObject json_obj_nombre = (JSONObject) obj_nombre;
            Object obj_title_value = json_obj_nombre.get("title");
            JSONArray json_title_value = (JSONArray) obj_title_value;
            System.out.println(json_title_value);
            int i = 0;
            for (Object obj_dataset_element : json_dataset_value) {
                array[i]= Integer.parseInt(obj_dataset_element.toString());                
                i++;
            }
            
            
            for (int j = 0; j < array.length; j++) {
                System.out.println(array[j]);
            }
                  
        }catch(FileNotFoundException e){
        JOptionPane.showMessageDialog(null, "Error: La ruta del archivo no ha podido ser encontrada");}
        catch(IOException e){}
        catch(ParseException e){}
                }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        orden = "Descendente";
        System.out.println(orden);
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    


    public class ordenar {
    
    }
    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
    public static void main(String args[]) throws Exception{
            
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
